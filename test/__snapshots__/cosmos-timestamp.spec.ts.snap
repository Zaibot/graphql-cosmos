// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Processed schema expects meta schema to remain the same 1`] = `
Object {
  "types": Array [
    Object {
      "container": null,
      "cosmos": false,
      "database": null,
      "external": false,
      "fields": Array [
        Object {
          "container": null,
          "cosmos": true,
          "database": null,
          "fieldname": "etag",
          "ours": "_etag",
          "pagination": false,
          "returnMany": false,
          "returnTypename": "String",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [
            "eq",
          ],
          "whereOurs": null,
        },
        Object {
          "container": null,
          "cosmos": false,
          "database": null,
          "fieldname": "id",
          "ours": null,
          "pagination": false,
          "returnMany": false,
          "returnTypename": "ID",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [
            "eq",
            "in",
          ],
          "whereOurs": null,
        },
        Object {
          "container": null,
          "cosmos": true,
          "database": null,
          "fieldname": "timestamp",
          "ours": "_ts",
          "pagination": false,
          "returnMany": false,
          "returnTypename": "Int",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [
            "gte",
          ],
          "whereOurs": null,
        },
      ],
      "filterable": true,
      "sortable": false,
      "typename": "Dummy",
    },
    Object {
      "container": null,
      "cosmos": false,
      "database": null,
      "external": false,
      "fields": Array [
        Object {
          "container": "Dummies",
          "cosmos": true,
          "database": "Test",
          "fieldname": "dummies",
          "ours": null,
          "pagination": true,
          "returnMany": true,
          "returnTypename": "Dummy",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [],
          "whereOurs": null,
        },
      ],
      "filterable": false,
      "sortable": false,
      "typename": "Query",
    },
  ],
}
`;

exports[`Processed schema expects schema to remain the same 1`] = `
"schema {
  query: Query
}
type Query {
  dummies(where: DummyWhere, cursor: String, limit: Int): DummyPage!
}
type Dummy {
  id: ID!
  timestamp: Int
  etag: String
}
type DummyPage {
  total: Int!
  cursor: String
  nextCursor: String
  page: [Dummy]!
}
input DummyWhere {
  and: [DummyWhere!]
  or: [DummyWhere!]
  etag_eq: String
  id_eq: ID
  id_in: [ID]
  timestamp_gte: Int
}"
`;
