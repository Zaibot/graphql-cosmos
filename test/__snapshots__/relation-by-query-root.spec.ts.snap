// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Reference to other container (root) expects meta schema to remain the same 1`] = `
Object {
  "types": Array [
    Object {
      "container": "Dummies",
      "cosmos": true,
      "database": "Test",
      "external": false,
      "fields": Array [
        Object {
          "container": null,
          "cosmos": false,
          "database": null,
          "fieldname": "id",
          "ours": null,
          "pagination": false,
          "returnMany": false,
          "returnTypename": "ID",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [],
          "whereOurs": null,
        },
        Object {
          "container": "Relations",
          "cosmos": true,
          "database": "Test",
          "fieldname": "related",
          "ours": "relatedIds",
          "pagination": true,
          "returnMany": true,
          "returnTypename": "Related",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [],
          "whereOurs": null,
        },
      ],
      "filterable": false,
      "sortable": false,
      "typename": "Dummy",
    },
    Object {
      "container": null,
      "cosmos": false,
      "database": null,
      "external": false,
      "fields": Array [
        Object {
          "container": "Dummies",
          "cosmos": true,
          "database": "Test",
          "fieldname": "dummies",
          "ours": null,
          "pagination": true,
          "returnMany": true,
          "returnTypename": "Dummy",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [],
          "whereOurs": null,
        },
      ],
      "filterable": false,
      "sortable": false,
      "typename": "Query",
    },
    Object {
      "container": "Relations",
      "cosmos": true,
      "database": "Test",
      "external": false,
      "fields": Array [
        Object {
          "container": "Dummies",
          "cosmos": true,
          "database": "Test",
          "fieldname": "dummies",
          "ours": null,
          "pagination": true,
          "returnMany": true,
          "returnTypename": "Dummy",
          "sortOurs": null,
          "sortable": false,
          "theirs": "relatedIds",
          "whereOps": Array [],
          "whereOurs": null,
        },
        Object {
          "container": null,
          "cosmos": false,
          "database": null,
          "fieldname": "id",
          "ours": null,
          "pagination": false,
          "returnMany": false,
          "returnTypename": "ID",
          "sortOurs": null,
          "sortable": false,
          "theirs": null,
          "whereOps": Array [],
          "whereOurs": null,
        },
      ],
      "filterable": false,
      "sortable": false,
      "typename": "Related",
    },
  ],
}
`;

exports[`Reference to other container (root) expects schema to remain the same 1`] = `
"schema {
  query: Query
}

type Query {
  dummies(cursor: String, limit: Int): DummyPage!
}

type Dummy {
  id: ID!
  related(cursor: String, limit: Int): RelatedPage!
}

type Related {
  id: ID!
  dummies(cursor: String, limit: Int): DummyPage!
}

type RelatedPage {
  total: Int!
  cursor: String
  nextCursor: String
  page: [Related]!
}

type DummyPage {
  total: Int!
  cursor: String
  nextCursor: String
  page: [Dummy]!
}
"
`;
